name: Full CI/CD Pipeline
 
on:

  push:

    branches: [ "main" ]

  workflow_dispatch:
 
env:

  IMAGE_NAME: ghcr.io/${{ github.repository }}
 
jobs:

  build:

    name: Build and Push Docker Image

    runs-on: ubuntu-latest

    permissions:

      contents: read

      packages: write

    outputs:

      image_tag: ${{ steps.meta.outputs.tags }}

    steps:

      - name: Checkout repository

        uses: actions/checkout@v4
 
      - name: Log in to GitHub Container Registry

        uses: docker/login-action@v3

        with:

          registry: ghcr.io

          username: ${{ github.actor }}

          password: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Extract metadata for Docker

        id: meta

        uses: docker/metadata-action@v5

        with:

          images: ${{ env.IMAGE_NAME }}
 
      - name: Build and push Docker image

        uses: docker/build-push-action@v5

        with:

          context: .

          push: true

          tags: ${{ steps.meta.outputs.tags }}

          labels: ${{ steps.meta.outputs.labels }}

          build-args: |

            APP_VERSION=${{ github.sha }}
 
  deploy:

    name: Deploy to EC2

    needs: build

    runs-on: ubuntu-latest

    steps:

      - name: Deploy to EC2 instance via SSH

        uses: appleboy/ssh-action@v1.0.3

        with:

          host: ${{ secrets.EC2_HOST }}

          username: ${{ secrets.EC2_USERNAME }}

          key: ${{ secrets.EC2_SSH_KEY }}

          port: 22

          script: |

            echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
 
            # Pull using tag passed from build job

            sudo docker pull ${{ needs.build.outputs.image_tag }}
 
            sudo docker stop my-app-container || true

            sudo docker rm my-app-container || true
 
            sudo docker run -d --name my-app-container --restart always -p 3000:3000 ${{ needs.build.outputs.image_tag }}
 
            sudo docker image prune -f

 